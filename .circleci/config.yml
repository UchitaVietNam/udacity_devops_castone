version: 2.1

orbs:
  docker: circleci/docker@1.5.0

commands:
jobs:
# Install dependencies for build app
  install-app-dependencies:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [app-dependencies]
      - run:
          name: app dependencies install
          command: |
            cd app
            npm i
      - save_cache:
          paths: [app/node_modules]
          key: app-dependencies

# Lint app before deploy
  lint-app:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [app-dependencies]
      - run:
          name: app lint
          command: |
             cd app
             npm i
             npm run lint

# Build and push container to docker hub
  build-docker:
    docker:
      - image: circleci/python:3.9
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: |
            cd app
            docker build -t uchitavietnam/udacity-devops-capstone:latest .
      - run:
          name: Log in to Docker Hub
          command: echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
      - run:
          name: Push Docker image
          command: docker push uchitavietnam/udacity-devops-capstone:latest

# Deploy app to eks
  deploy-to-eks:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - run:
          name: Install awscli and gettext-base
          command: |
            sudo pip3 install awscli
            sudo apt-get install gettext-base
      - run:
          name: Install aws-iam-authenticator
          command: |
            curl -o aws-iam-authenticator curl -o aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.13.7/2019-06-11/bin/linux/amd64/aws-iam-authenticator
            chmod +x ./aws-iam-authenticator
            sudo mv ./aws-iam-authenticator /usr/local/bin/aws-iam-authenticator
      - run:
          name: Install kubectl
          command: |
            curl -o kubectl https://amazon-eks.s3-us-west-2.amazonaws.com/1.13.7/2019-06-11/bin/linux/amd64/kubectl
            chmod +x ./kubectl
            sudo mv ./kubectl /usr/local/bin/kubectl
      - run:
          name: Connect to cluster
          command: |
            aws eks --region us-east-1 update-kubeconfig --name devops-capstone
      - run:
          name: Prepare K8S template
          command: |
            rm -rf .k8s/.generated && mkdir -p app/.k8s/.generated
            for f in .circleci/.k8s/deployment.yaml
              do
              envsubst < $f > "app/.k8s/.generated/$(basename $f)"
            done
      - run:
          name: Debugging
          command: |
            kubectl config view
            kubectl config current-context
      - run:
          name: Apply
          command: |
            sudo kubectl apply -f app/.k8s/.generated/
      - run:
          name: Get pod
          command: |
            sudo kubectl get pod

workflows:
  default:
    jobs:
      - install-app-dependencies
      - lint-app:
          requires: [install-app-dependencies]
      - build-docker:
          requires: [install-app-dependencies, lint-app]
      - deploy-to-eks:
          requires: [build-docker]
