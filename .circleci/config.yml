version: 2.1

orbs:
  aws-cli: circleci/aws-cli@3.1.1

commands:
  destroy-environment:
    description: Destroy back-end and front-end cloudformation stacks given a workflow ID.
    parameters:
      Workflow_ID:
        type: string
        default: ${CIRCLE_WORKFLOW_ID:0:7}
    steps:
      - run:
          name: Destroy environments
          when: on_fail
          command: |
            echo "Destroying environment: << parameters.Workflow_ID >> "
            aws s3 rm s3://devops-capstone-network-<<parameters.Workflow_ID>> --recursive
            aws s3 rm s3://devops-capstone-server-<<parameters.Workflow_ID>> --recursive
            aws cloudformation delete-stack --stack-name devops-capstone-network-<< parameters.Workflow_ID >>
            aws cloudformation delete-stack --stack-name devops-capstone-server-<< parameters.Workflow_ID >>

jobs:
  build-docker:
    docker:
      - image: circleci/python:3.9
    steps:
      - checkout
      - setup_remote_docker
      # Build Docker image
      - run:
          name: Build Docker image
          command: docker build -t uchitavietnam/udacity-devops-capstone:latest .
      # Log in to Docker Hub
      - run:
          name: Log in to Docker Hub
          command: echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
      # Push Docker image to Docker Hub
      - run:
          name: Push Docker image
          command: docker push uchitavietnam/udacity-devops-capstone:latest

  deploy-network:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Install tar and zip utilities
          command: |
            yum -y install tar gzip
      - run:
          name: Ensure network infrastructure exists
          command: |
            aws cloudformation deploy \
              --template-file .circleci/network/network.yml \
              --tags project=devops-capstone-network \
              --stack-name "devops-capstone-network-${CIRCLE_WORKFLOW_ID:0:7}" \
              --parameter-overrides ID="${CIRCLE_WORKFLOW_ID:0:7}"
      - destroy-environment

  deploy-server:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Install tar and zip utilities
          command: |
            yum -y install tar gzip
      - run:
          name: Ensure server infrastructure exists
          command: |
            aws cloudformation deploy \
              --template-file .circleci/server/server.yml \
              --tags project=devops-capstone-server \
              --stack-name "devops-capstone-server-${CIRCLE_WORKFLOW_ID:0:7}" \
              --parameter-overrides ID="${CIRCLE_WORKFLOW_ID:0:7}"
      - destroy-environment

workflows:
  default:
    jobs:
      - build-docker
      - deploy-network:
          requires: [build-docker]
      - deploy-server:
          requires: [deploy-network]
