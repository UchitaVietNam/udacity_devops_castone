version: 2.1

orbs:
  aws-cli: circleci/aws-cli@3.1.1
  kubernetes: circleci/kubernetes@1.0.2
  aws-eks: circleci/aws-eks@1.1

commands:
  destroy-environment:
    description: Destroy back-end and front-end cloudformation stacks given a workflow ID.
    parameters:
      Workflow_ID:
        type: string
        default: ${CIRCLE_WORKFLOW_ID:0:7}
    steps:
      - run:
          name: Destroy environments
          when: on_fail
          command: |
            echo "Destroying environment: << parameters.Workflow_ID >> "
            aws cloudformation delete-stack --stack-name devops-capstone-network-<< parameters.Workflow_ID >>
            aws cloudformation delete-stack --stack-name devops-capstone-server-<< parameters.Workflow_ID >>

jobs:
  build-docker:
    docker:
      - image: circleci/python:3.9
    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
            # Install hadolint
            sudo wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64
            sudo chmod +x /bin/hadolint
      - run:
          name: run lint
          command: |
            . venv/bin/activate 
            make lint
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: docker build -t uchitavietnam/udacity-devops-capstone:latest .
      - run:
          name: Log in to Docker Hub
          command: echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
      - run:
          name: Push Docker image
          command: docker push uchitavietnam/udacity-devops-capstone:latest

  deploy-to-eks:
    description: Deploy Docker image to EKS
    executor: aws-eks
    steps:
      - run:
          name: Install AWS CLI
          command: |
            curl "https://d1vvhvl2y92vvt.cloudfront.net/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
            aws --version
      - aws eks update-kubeconfig:
          cluster-name: udacity-devops-capstone-cluster
          install-kubectl: true
          region: us-east-1
      - run:
          name: Configure kubectl for EKS cluster
          command: |
            # Set the kubeconfig context for your EKS cluster
            kubectl config use-context udacity-devops-capstone-cluster
            # Authenticate to the cluster (this may vary depending on your cluster setup)
            # Example using AWS IAM Authenticator:
            aws eks update-kubeconfig --region us-east-1 --name udacity-devops-capstone-cluster
            # Verify the context and credentials
            kubectl config view
      - run:
          name: Deploy to EC2 instances
          command: |
            # Use kubectl to apply your Kubernetes manifest files to the EC2 instances
            kubectl apply -f your-deployment-manifest.yaml
            kubectl apply -f your-service-manifest.yaml
      # - kubernetes/create-or-update-resource:
      #     resource-file-path: .circleci/deployment.yml
      #     resource-name: my-app-deployment
      #     resource-type: deployment
      #     namespace: default
      #     wait: true
      #     kubectl-version: "1.18.18"
      # - kubernetes/apply:
      #     resource-file-path: .circleci/k8s-service.yml
      #     resource-name: my-app-service
      #     namespace: default
      #     wait: true
      #     kubectl-version: "1.18.18"

  deploy-network:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Install tar and zip utilities
          command: |
            yum -y install tar gzip
      - run:
          name: Ensure network infrastructure exists
          command: |
            aws cloudformation deploy \
              --template-file .circleci/network/network.yml \
              --tags project=devops-capstone-network \
              --stack-name "devops-capstone-network-${CIRCLE_WORKFLOW_ID:0:7}" \
              --parameter-overrides ID="${CIRCLE_WORKFLOW_ID:0:7}"
      - destroy-environment

  deploy-server:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Install tar and zip utilities
          command: |
            yum -y install tar gzip
      - run:
          name: Ensure server infrastructure exists
          command: |
            aws cloudformation deploy \
              --template-file .circleci/server/server.yml \
              --tags project=devops-capstone-server \
              --stack-name "devops-capstone-server-${CIRCLE_WORKFLOW_ID:0:7}" \
              --parameter-overrides ID="${CIRCLE_WORKFLOW_ID:0:7}"
      - destroy-environment

workflows:
  default:
    jobs:
      - build-docker
      - deploy-to-eks
      # - deploy-network:
      #     requires: [build-docker]
      # - deploy-server:
      #     requires: [deploy-network]
